// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GS1US.Tests.DataHub.Features.DeploymentSanityTest
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Company sanity checks", SourceFile="Features\\DeploymentSanityTest\\Company.feature", SourceLine=0)]
    public partial class CompanySanityChecksFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Company.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Company sanity checks", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company 1", new string[] {
                "vsts"}, SourceLine=3)]
        public virtual void Company1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Company 1", null, new string[] {
                        "vsts"});
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.When("login as GS1 US Enterprises 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
 testRunner.And("wait and close Walk Me Through popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table1.AddRow(new string[] {
                        "894514002",
                        "B. Happybags, LLC."});
#line 7
 testRunner.And("verify prefix search result", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table2.AddRow(new string[] {
                        "180253000",
                        "Papaya- Creative Abandon"});
#line 10
 testRunner.And("verify prefix search result", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table3.AddRow(new string[] {
                        "60653890000005",
                        "Gorilla Snot USA, LLC"});
#line 13
 testRunner.And("verify GTIN search result", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table4.AddRow(new string[] {
                        "05012345000015",
                        "GS1 UK Ltd"});
#line 16
 testRunner.And("verify GTIN search result", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table5.AddRow(new string[] {
                        "9300658000003",
                        "LD&D AUSTRALIA PTY LTD"});
#line 19
 testRunner.And("verify GTIN search result", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table6.AddRow(new string[] {
                        "0633922000003",
                        "Eagle Cap Nursery LLC"});
#line 22
 testRunner.And("verify GLN search result", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table7.AddRow(new string[] {
                        "4399901110991",
                        "\"ALter Imbiss\""});
#line 25
 testRunner.And("verify GLN search result", ((string)(null)), table7, "And ");
#line 28
 testRunner.And("download and verify active US prefix list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("in List Match, check GTIN list upload works", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CompanyPrefixSearch(string prefix, string companyName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Company Prefix Search", null, exampleTags);
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 33
 testRunner.When("login as GS1 US Enterprises 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.And("wait and close Walk Me Through popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table8.AddRow(new string[] {
                        string.Format("{0}", prefix),
                        string.Format("{0}", companyName)});
#line 35
 testRunner.And("verify prefix search result", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company Prefix Search, 894514002", new string[] {
                "source:CompanySearchExamples.xlsx:Prefix"}, SourceLine=0)]
        public virtual void CompanyPrefixSearch_894514002()
        {
#line 32
this.CompanyPrefixSearch("894514002", "B. Happybags, LLC.", new string[] {
                        "source:CompanySearchExamples.xlsx:Prefix"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company Prefix Search, 180253000", new string[] {
                "source:CompanySearchExamples.xlsx:Prefix"}, SourceLine=0)]
        public virtual void CompanyPrefixSearch_180253000()
        {
#line 32
this.CompanyPrefixSearch("180253000", "Papaya- Creative Abandon", new string[] {
                        "source:CompanySearchExamples.xlsx:Prefix"});
#line hidden
        }
        
        public virtual void CompanyGTINSearch(string gtin, string companyName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Company GTIN Search", null, exampleTags);
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 45
 testRunner.When("login as GS1 US Enterprises 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.And("wait and close Walk Me Through popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "company name"});
            table9.AddRow(new string[] {
                        string.Format("{0}", gtin),
                        string.Format("{0}", companyName)});
#line 47
 testRunner.And("verify GTIN search result", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company GTIN Search, 60653890000005", new string[] {
                "source:CompanySearchExamples.xlsx:GTIN"}, SourceLine=0)]
        public virtual void CompanyGTINSearch_60653890000005()
        {
#line 44
this.CompanyGTINSearch("60653890000005", "Gorilla Snot USA, LLC", new string[] {
                        "source:CompanySearchExamples.xlsx:GTIN"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company GTIN Search, 5012345000015", new string[] {
                "source:CompanySearchExamples.xlsx:GTIN"}, SourceLine=0)]
        public virtual void CompanyGTINSearch_5012345000015()
        {
#line 44
this.CompanyGTINSearch("5012345000015", "GS1 UK Ltd", new string[] {
                        "source:CompanySearchExamples.xlsx:GTIN"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Company GTIN Search, 9300658000003", new string[] {
                "source:CompanySearchExamples.xlsx:GTIN"}, SourceLine=0)]
        public virtual void CompanyGTINSearch_9300658000003()
        {
#line 44
this.CompanyGTINSearch("9300658000003", "LD&D AUSTRALIA PTY LTD", new string[] {
                        "source:CompanySearchExamples.xlsx:GTIN"});
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
