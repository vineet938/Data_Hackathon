// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GS1US.Tests.RTF.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Common Signup App", SourceFile="Features\\CommonSignupApp.feature", SourceLine=0)]
    public partial class CommonSignupAppFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CommonSignupApp.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Common Signup App", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void NewCustomerBuysPrefixesWithPayPal(string capacities, string upc, string upc2, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "paypal"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New customer buys prefixes with PayPal", null, @__tags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
 testRunner.And("I skip the modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.And("I fill primary contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I check the same-as-primary-contact checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I click on the PayPal button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I proceed with PayPal payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I confirm the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table1.AddRow(new string[] {
                        "CM",
                        "1"});
            table1.AddRow(new string[] {
                        "I",
                        "1"});
            table1.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 21
 testRunner.And("In Name table, following entries are created", ((string)(null)), table1, "And ");
#line 26
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table2.AddRow(new string[] {
                        "PC_AN_CAP",
                        "1"});
            table2.AddRow(new string[] {
                        "PC_AN_CAP1",
                        "1"});
#line 27
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table2, "And ");
#line 31
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("In IDM database, company, user and claims are created correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10", new string[] {
                "paypal",
                "vsts"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet0_10()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10", "1", "0", "1", new string[] {
                        "vsts"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 2, 10", new string[] {
                "paypal",
                "light"}, SourceLine=43)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet1_10()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10", "1", "0", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 100, 1000", new string[] {
                "paypal",
                "light"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet1_1001000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("100, 1000", "2", "1", "2", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10, 100, 1000", new string[] {
                "paypal",
                "light"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet1_101001000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10, 100, 1000", "3", "2", "0", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_10()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 100", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_100()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("100", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_1000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("1000", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10000", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_10000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10000", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 100000", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_100000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("100000", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_1010()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10, 10", "2", "1", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 100, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_1001000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("100, 1000", "2", "1", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10, 100, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_101001000()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10, 100, 1000", "3", "2", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 100000, 10000, 10000, 10000, " +
            "1000, 100, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_100000100001000010000100010010()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "6", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal, Examples 1, 10,10000,10,100000,1000,10,10" +
            "0,10,10", new string[] {
                "paypal",
                "heavy"}, SourceLine=38)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_ExampleSet2_1010000101000001000101001010()
        {
#line 4
this.NewCustomerBuysPrefixesWithPayPal("10,10000,10,100000,1000,10,100,10,10", "9", "8", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "paypal"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New customer buys prefixes with PayPal - Different executive contact", null, @__tags);
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.And("I skip the modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I fill primary contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I fill executive contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I click on the PayPal button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I proceed with PayPal payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I confirm the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table3.AddRow(new string[] {
                        "CM",
                        "1"});
            table3.AddRow(new string[] {
                        "I",
                        "2"});
            table3.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 81
 testRunner.And("In Name table, following entries are created", ((string)(null)), table3, "And ");
#line 86
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table4.AddRow(new string[] {
                        "PC_AN_CAP",
                        "1"});
            table4.AddRow(new string[] {
                        "PC_AN_CAP1",
                        "1"});
#line 87
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table4, "And ");
#line 91
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("In IDM database, company, user and claims are created correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 100", new string[] {
                "paypal",
                "light"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet0_100()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("100", "1", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10, 10", new string[] {
                "paypal",
                "light"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet0_1010()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10, 10", "2", "2", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10, 100, 1000", new string[] {
                "paypal",
                "light"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet0_101001000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10, 100, 1000", "3", "0", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_10()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 100", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_100()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("100", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_1000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("1000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10000", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_10000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 100000", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_100000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("100000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_1010()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 100, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_1001000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("100, 1000", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10, 100, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_101001000()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10, 100, 1000", "3", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 100000, 10000, 10000, 10000, 1000, 100, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_100000100001000010000100010010()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with PayPal - Different executive contact, Examples 1," +
            " 10,10000,10,100000,1000,10,100,10,10", new string[] {
                "paypal",
                "heavy"}, SourceLine=98)]
        public virtual void NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact_ExampleSet1_1010000101000001000101001010()
        {
#line 64
this.NewCustomerBuysPrefixesWithPayPal_DifferentExecutiveContact("10,10000,10,100000,1000,10,100,10,10", "9", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "paypal"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Existing customer buys prefixes with PayPal - Proration", null, @__tags);
#line 121
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 122
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
 testRunner.And("I select an account with proration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.And("I enter account number and zip code and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I fill primary contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I fill executive contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I click on the PayPal button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.And("I proceed with PayPal payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.And("I confirm the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table5.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 139
 testRunner.And("In Name table, following entries are created or updated", ((string)(null)), table5, "And ");
#line 142
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table6.AddRow(new string[] {
                        "PC_AN_CAP_A",
                        string.Format("{0}", upc)});
            table6.AddRow(new string[] {
                        "PC_AN_CAP_A1",
                        string.Format("{0}", upc)});
            table6.AddRow(new string[] {
                        "PC_AN_CAP_A2",
                        string.Format("{0}", upc)});
#line 143
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table6, "And ");
#line 148
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 10", new string[] {
                "paypal",
                "debug"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet0_1010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 10", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100, 1000", new string[] {
                "paypal",
                "debug"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet0_1001000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100, 1000", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 100, 100" +
            "0", new string[] {
                "paypal",
                "debug"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet0_101001000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 100, 1000", "3", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100000, 1000" +
            "0, 10000, 10000, 1000, 100, 10", new string[] {
                "paypal",
                "debug"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet0_100000100001000010000100010010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10,10000,10," +
            "100000,1000,10,100,10,10", new string[] {
                "paypal",
                "debug"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet0_1010000101000001000101001010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10,10000,10,100000,1000,10,100,10,10", "9", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10", new string[] {
                "paypal",
                "light"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet1_10()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10", "1", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 10", new string[] {
                "paypal",
                "light"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet1_1010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 10", "2", "2", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 100, 100" +
            "0", new string[] {
                "paypal",
                "light"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet1_101001000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 100, 1000", "3", "0", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_10()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_100()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_1000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("1000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10000", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_10000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100000", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_100000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_1010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_1001000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100, 1000", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10, 100, 100" +
            "0", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_101001000()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10, 100, 1000", "3", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 100000, 1000" +
            "0, 10000, 10000, 1000, 100, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_100000100001000010000100010010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - Proration, Examples 1, 10,10000,10," +
            "100000,1000,10,100,10,10", new string[] {
                "paypal",
                "heavy"}, SourceLine=154)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_Proration_ExampleSet2_1010000101000001000101001010()
        {
#line 121
this.ExistingCustomerBuysPrefixesWithPayPal_Proration("10,10000,10,100000,1000,10,100,10,10", "9", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "paypal"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Existing customer buys prefixes with PayPal - No proration", null, @__tags);
#line 184
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 185
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
 testRunner.And("I select an account without proration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And("I enter account number and zip code and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I fill primary contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I fill executive contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I click on the PayPal button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.And("I proceed with PayPal payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("I confirm the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table7.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 202
 testRunner.And("In Name table, following entries are created or updated", ((string)(null)), table7, "And ");
#line 205
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table8.AddRow(new string[] {
                        "PC_AN_CAP_A",
                        string.Format("{0}", upc)});
            table8.AddRow(new string[] {
                        "PC_AN_CAP_A1",
                        string.Format("{0}", upc)});
#line 206
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table8, "And ");
#line 210
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10, 10", new string[] {
                "paypal",
                "debug"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet0_1010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10, 10", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100, 1000" +
            "", new string[] {
                "paypal",
                "debug"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet0_1001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100, 1000", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10, 100, " +
            "1000", new string[] {
                "paypal",
                "debug"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet0_101001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10, 100, 1000", "3", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100000, 1" +
            "0000, 10000, 10000, 1000, 100, 10", new string[] {
                "paypal",
                "debug"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet0_100000100001000010000100010010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10,10000," +
            "10,100000,1000,10,100,10,10", new string[] {
                "paypal",
                "debug"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet0_1010000101000001000101001010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10,10000,10,100000,1000,10,100,10,10", "9", "0", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100000", new string[] {
                "paypal",
                "light"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet1_100000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100000", "1", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100, 1000" +
            "", new string[] {
                "paypal",
                "light"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet1_1001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100, 1000", "2", "2", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10, 100, " +
            "1000", new string[] {
                "paypal",
                "light"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet1_101001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10, 100, 1000", "3", "0", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_10()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_100()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_1000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("1000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10000", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_10000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100000", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_100000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100000", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_1010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100, 1000" +
            "", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_1001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100, 1000", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10, 100, " +
            "1000", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_101001000()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10, 100, 1000", "3", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 100000, 1" +
            "0000, 10000, 10000, 1000, 100, 10", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_100000100001000010000100010010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("100000, 10000, 10000, 10000, 1000, 100, 10", "7", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with PayPal - No proration, Examples 1, 10,10000," +
            "10,100000,1000,10,100,10,10", new string[] {
                "paypal",
                "heavy"}, SourceLine=216)]
        public virtual void ExistingCustomerBuysPrefixesWithPayPal_NoProration_ExampleSet2_1010000101000001000101001010()
        {
#line 184
this.ExistingCustomerBuysPrefixesWithPayPal_NoProration("10,10000,10,100000,1000,10,100,10,10", "9", "0", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void NewCustomerBuysPrefixesWithCC(string capacities, string upc, string upc2, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cc"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New customer buys prefixes with CC", null, @__tags);
#line 246
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 247
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 248
 testRunner.And("I skip the modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.And("I fill primary contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.And("I check the same-as-primary-contact checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.And("I fill CC payment information and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table9.AddRow(new string[] {
                        "CM",
                        "1"});
            table9.AddRow(new string[] {
                        "I",
                        "1"});
            table9.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 261
 testRunner.And("In Name table, following entries are created", ((string)(null)), table9, "And ");
#line 266
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table10.AddRow(new string[] {
                        "PC_AN_CAP",
                        "1"});
            table10.AddRow(new string[] {
                        "PC_AN_CAP1",
                        "1"});
#line 267
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table10, "And ");
#line 271
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("In IDM database, company, user and claims are created correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC, Examples 1, 10", new string[] {
                "cc",
                "light"}, SourceLine=278)]
        public virtual void NewCustomerBuysPrefixesWithCC_ExampleSet0_10()
        {
#line 246
this.NewCustomerBuysPrefixesWithCC("10", "1", "0", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC, Examples 2, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=283)]
        public virtual void NewCustomerBuysPrefixesWithCC_ExampleSet1_10()
        {
#line 246
this.NewCustomerBuysPrefixesWithCC("10", "1", "0", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC, Examples 1, 10, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=278)]
        public virtual void NewCustomerBuysPrefixesWithCC_ExampleSet1_1010()
        {
#line 246
this.NewCustomerBuysPrefixesWithCC("10, 10", "2", "1", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cc"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New customer buys prefixes with CC - Different executive contact", null, @__tags);
#line 289
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 290
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
 testRunner.And("I skip the modal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.And("I fill primary contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.And("I fill executive contact form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I fill CC payment information and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table11.AddRow(new string[] {
                        "CM",
                        "1"});
            table11.AddRow(new string[] {
                        "I",
                        "2"});
            table11.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 304
 testRunner.And("In Name table, following entries are created", ((string)(null)), table11, "And ");
#line 309
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table12.AddRow(new string[] {
                        "PC_AN_CAP",
                        "1"});
            table12.AddRow(new string[] {
                        "PC_AN_CAP1",
                        "1"});
#line 310
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table12, "And ");
#line 314
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.And("In IDM database, company, user and claims are created correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC - Different executive contact, Examples 1, 10," +
            " 10", new string[] {
                "cc",
                "light"}, SourceLine=321)]
        public virtual void NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact_ExampleSet0_1010()
        {
#line 289
this.NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact("10, 10", "2", "2", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC - Different executive contact, Examples 1, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=321)]
        public virtual void NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact_ExampleSet1_10()
        {
#line 289
this.NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("New customer buys prefixes with CC - Different executive contact, Examples 1, 10," +
            " 10", new string[] {
                "cc",
                "heavy"}, SourceLine=321)]
        public virtual void NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact_ExampleSet1_1010()
        {
#line 289
this.NewCustomerBuysPrefixesWithCC_DifferentExecutiveContact("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cc"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Existing customer buys prefixes with CC - Proration", null, @__tags);
#line 334
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 335
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
 testRunner.And("I select an account with proration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.And("I enter account number and zip code and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
 testRunner.And("I fill primary contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.And("I fill executive contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 340
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
 testRunner.And("I fill CC payment information and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table13.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 350
 testRunner.And("In Name table, following entries are created or updated", ((string)(null)), table13, "And ");
#line 353
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table14.AddRow(new string[] {
                        "PC_AN_CAP_A",
                        string.Format("{0}", upc)});
            table14.AddRow(new string[] {
                        "PC_AN_CAP_A1",
                        string.Format("{0}", upc)});
            table14.AddRow(new string[] {
                        "PC_AN_CAP_A2",
                        string.Format("{0}", upc)});
#line 354
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table14, "And ");
#line 359
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - Proration, Examples 1, 10", new string[] {
                "cc",
                "vsts2"}, SourceLine=365)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration_ExampleSet0_10()
        {
#line 334
this.ExistingCustomerBuysPrefixesWithCC_Proration("10", "1", "1", new string[] {
                        "vsts2"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - Proration, Examples 1, 10, 10", new string[] {
                "cc",
                "debug"}, SourceLine=365)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration_ExampleSet1_1010()
        {
#line 334
this.ExistingCustomerBuysPrefixesWithCC_Proration("10, 10", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - Proration, Examples 1, 10", new string[] {
                "cc",
                "light"}, SourceLine=365)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration_ExampleSet2_10()
        {
#line 334
this.ExistingCustomerBuysPrefixesWithCC_Proration("10", "1", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - Proration, Examples 2, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=370)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration_ExampleSet3_10()
        {
#line 334
this.ExistingCustomerBuysPrefixesWithCC_Proration("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - Proration, Examples 1, 10, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=365)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_Proration_ExampleSet3_1010()
        {
#line 334
this.ExistingCustomerBuysPrefixesWithCC_Proration("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        public virtual void ExistingCustomerBuysPrefixesWithCC_NoProration(string capacities, string upc, string n, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "cc"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Existing customer buys prefixes with CC - No proration", null, @__tags);
#line 386
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 387
 testRunner.When("I navigate to CSA web site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 388
 testRunner.And("I select an account without proration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("I enter account number and zip code and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I fill primary contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.And("I fill executive contact form with modification", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("I update primary contact email using test email account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And("I click on the next button on contact details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.And(string.Format("I select prefixes: {0}", capacities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
 testRunner.And("I click on the policy consent checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.And("I click on the next button on program details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("I click on the license agreement checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.And("I fill contact information using primary contact", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
 testRunner.And("I fill CC payment information and submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
 testRunner.And("I wait for logic app to finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
 testRunner.Then(string.Format("I see {0} prefixes displayed", n), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "MemberType",
                        "Count"});
            table15.AddRow(new string[] {
                        "#UPC",
                        string.Format("{0}", upc)});
#line 402
 testRunner.And("In Name table, following entries are created or updated", ((string)(null)), table15, "And ");
#line 405
 testRunner.And("Relationship entries have correct target ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductCode",
                        "Count"});
            table16.AddRow(new string[] {
                        "PC_AN_CAP_A",
                        string.Format("{0}", upc)});
            table16.AddRow(new string[] {
                        "PC_AN_CAP_A1",
                        string.Format("{0}", upc)});
#line 406
 testRunner.And("Subscription entries are created as follows", ((string)(null)), table16, "And ");
#line 410
 testRunner.And("In Subscriptions table, billing amounts are correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
 testRunner.And("I receive the Welcome Kit email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.And("In Trans table, payments are added to a batch", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - No proration, Examples 1, 10, 10", new string[] {
                "cc",
                "debug"}, SourceLine=416)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_NoProration_ExampleSet0_1010()
        {
#line 386
this.ExistingCustomerBuysPrefixesWithCC_NoProration("10, 10", "2", "2", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - No proration, Examples 1, 10", new string[] {
                "cc",
                "light"}, SourceLine=416)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_NoProration_ExampleSet1_10()
        {
#line 386
this.ExistingCustomerBuysPrefixesWithCC_NoProration("10", "1", "1", new string[] {
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - No proration, Examples 2, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=421)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_NoProration_ExampleSet2_10()
        {
#line 386
this.ExistingCustomerBuysPrefixesWithCC_NoProration("10", "1", "1", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Existing customer buys prefixes with CC - No proration, Examples 1, 10, 10", new string[] {
                "cc",
                "heavy"}, SourceLine=416)]
        public virtual void ExistingCustomerBuysPrefixesWithCC_NoProration_ExampleSet2_1010()
        {
#line 386
this.ExistingCustomerBuysPrefixesWithCC_NoProration("10, 10", "2", "2", new string[] {
                        "heavy"});
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
