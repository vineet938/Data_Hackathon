// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GS1US.Tests.UIIS.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Prefix holding and releasing regression scenarios", SourceFile="Features\\RegressionHoldAndRelease.feature", SourceLine=0)]
    public partial class PrefixHoldingAndReleasingRegressionScenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RegressionHoldAndRelease.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Prefix holding and releasing regression scenarios", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("On Hold Prefixes page UI test", new string[] {
                "debug",
                "light"}, SourceLine=4)]
        public virtual void OnHoldPrefixesPageUITest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On Hold Prefixes page UI test", null, new string[] {
                        "debug",
                        "light"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I click on link On Hold Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.Then("I get multiple columns such as Prefix On Hold, Capacity, Type, Account, Date, Who" +
                    ", Reason, Actions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And("All the columns are sortable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("Filter columns fetches the desired data based upon filter conditions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("items page fetches the count based upon the selection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void HoldPrefix(string capacity, string prefix_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Hold prefix", null, exampleTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.Given("I have an account information such that member type is CM, XCM, HCM or NM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("I click on HOLD A PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And(string.Format("I click on the {0} PREFIX button", prefix_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("I select {0} prefix from CompanyPrefix table", prefix_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I input selected prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I verify Prefix Available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I enter reason for holding the prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I click on Hold PREFIX button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I check this Identifier available in CompanyPrefixHold table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 0", new string[] {
                "debug"}, SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet0_Variant0()
        {
#line 15
this.HoldPrefix("10", "UPC", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 1", new string[] {
                "debug"}, SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet0_Variant1()
        {
#line 15
this.HoldPrefix("100", "UPC", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 2", new string[] {
                "debug"}, SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet0_Variant2()
        {
#line 15
this.HoldPrefix("100", "EAN", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 3", new string[] {
                "debug"}, SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet0_Variant3()
        {
#line 15
this.HoldPrefix("1000", "EAN", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 0", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant0()
        {
#line 15
this.HoldPrefix("10", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 1", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant1()
        {
#line 15
this.HoldPrefix("100", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 2", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant2()
        {
#line 15
this.HoldPrefix("1000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 3", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant3()
        {
#line 15
this.HoldPrefix("10000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 4", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant4()
        {
#line 15
this.HoldPrefix("100000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 5", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant5()
        {
#line 15
this.HoldPrefix("10", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 6", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant6()
        {
#line 15
this.HoldPrefix("100", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 7", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant7()
        {
#line 15
this.HoldPrefix("1000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 8", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant8()
        {
#line 15
this.HoldPrefix("10000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Hold prefix, Examples 1, Variant 9", SourceLine=35)]
        public virtual void HoldPrefix_ExampleSet1_Variant9()
        {
#line 15
this.HoldPrefix("100000", "EAN", ((string[])(null)));
#line hidden
        }
        
        public virtual void ReleaseAnHeldPrefix(string prefix_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Release an held prefix", null, exampleTags);
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.Given(string.Format("I have a held {0} prefix", prefix_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I click on link On Hold Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I enter the prefix in the filter field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I click on Release button in the first row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I get the review page showing Account Number, Identifier Type, Capacity, Prefix, " +
                    "Reason for Hold", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I click on Yes button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.Then("I check this prefix is not available in CompanyPrefixHold table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
 testRunner.And("I check this prefix is not in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Release an held prefix, UPC", new string[] {
                "debug"}, SourceLine=69)]
        public virtual void ReleaseAnHeldPrefix_UPC()
        {
#line 55
this.ReleaseAnHeldPrefix("UPC", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Release an held prefix, EAN", new string[] {
                "debug"}, SourceLine=69)]
        public virtual void ReleaseAnHeldPrefix_EAN()
        {
#line 55
this.ReleaseAnHeldPrefix("EAN", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Release and vend held UPC prefix", new string[] {
                "debug"}, SourceLine=74)]
        public virtual void ReleaseAndVendHeldUPCPrefix()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Release and vend held UPC prefix", null, new string[] {
                        "debug"});
#line 75
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 76
 testRunner.Given("I have a held UPC prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I click on link On Hold Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I enter the prefix in the filter field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I click on Release and Vend button in the first row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I get the review page showing Account Number, Identifier Type, Capacity, Prefix, " +
                    "Reason", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I click on vend prefix button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.Then("I check that displayed vended prefix and account number is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
 testRunner.And("I check this prefix is not available in CompanyPrefixHold table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.And("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And("I check that vended identifier matches major key in Name table with leading 0 rem" +
                    "oved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I check that category is CAP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Release and vend EAN prefix", new string[] {
                "debug"}, SourceLine=93)]
        public virtual void ReleaseAndVendEANPrefix()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Release and vend EAN prefix", null, new string[] {
                        "debug"});
#line 94
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 95
    testRunner.Given("I have a held EAN prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.And("I click on link On Hold Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("I enter the prefix in the filter field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I click on Release and Vend button in the first row", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I get the review page showing Account Number, Identifier Type, Capacity, Prefix, " +
                    "Reason", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I click on vend prefix button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.Then("I check that displayed vended prefix and account number is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
 testRunner.And("I check this prefix is not available in CompanyPrefixHold table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I check that vended identifier matches last name in Name table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("I check that category is SPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
