// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GS1US.Tests.UIIS.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Auto-vend uses smallest open, auto-vend range of given prefix type", Description="\tThere was a bug where auto-vend used a manual-vend range because it was smallest" +
        " open.", SourceFile="Features\\RegressionSmallestRange.feature", SourceLine=0)]
    public partial class Auto_VendUsesSmallestOpenAuto_VendRangeOfGivenPrefixTypeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RegressionSmallestRange.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Auto-vend uses smallest open, auto-vend range of given prefix type", "\tThere was a bug where auto-vend used a manual-vend range because it was smallest" +
                    " open.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange(string capacity, string prefix_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
                    "manual-vend range", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given("I have an account information such that member type is CM, XCM, HCM, NM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And(string.Format("I have smallest open {0} range for auto vending with capacity {1}", prefix_Type, capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And(string.Format("I open manual-vend {0} range with capacity {1} that is smaller than the auto-vend" +
                        " range", prefix_Type, capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And(string.Format("I auto-vend a {0} prefix of capacity {1}", prefix_Type, capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then("I see vended prefix is from the auto-vend range", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, 100", new string[] {
                "debug"}, SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet0_100()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("100", "UPC", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, 10", new string[] {
                "debug"}, SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet0_10()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("10", "EAN", new string[] {
                        "debug"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 0", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant0()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("10", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 1", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant1()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("100", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 2", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant2()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("1000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 3", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant3()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("10000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 4", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant4()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("100000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 5", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant5()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("10", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 6", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant6()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("100", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 7", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant7()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("1000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 8", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant8()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("10000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Prefix is auto-vended from smallest open auto-vend range instead of smaller open " +
            "manual-vend range, Examples 1, Variant 9", SourceLine=15)]
        public virtual void PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange_ExampleSet1_Variant9()
        {
#line 4
this.PrefixIsAuto_VendedFromSmallestOpenAuto_VendRangeInsteadOfSmallerOpenManual_VendRange("100000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
