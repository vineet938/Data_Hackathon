// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GS1US.Tests.UIIS.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("UIIS regression scripts", Description="\tTest scenarios in UIIS regression scripts", SourceFile="Features\\RegressionScripts.feature", SourceLine=0)]
    public partial class UIISRegressionScriptsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RegressionScripts.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UIIS regression scripts", "\tTest scenarios in UIIS regression scripts", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void UPCPrefixAutoVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UPC prefix auto vending", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the STANDARD UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I click on the NEXT AVAILABLE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.And("I check that vended identifier matches major key in Name table with leading 0 rem" +
                    "oved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I check that category is CAP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("If {0} = Existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And(string.Format("If {0} = New, I check that displayed GLN does match ENTITY_GLN in Demog_All_W tab" +
                        "le", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I check that identifier type is UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I check that UPC Range is Standard UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, 10", new string[] {
                "debug",
                "light"}, SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet0_10()
        {
#line 4
this.UPCPrefixAutoVending("10", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, 100", new string[] {
                "debug",
                "light"}, SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet0_100()
        {
#line 4
this.UPCPrefixAutoVending("100", "NM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 0", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant0()
        {
#line 4
this.UPCPrefixAutoVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 1", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant1()
        {
#line 4
this.UPCPrefixAutoVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 2", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant2()
        {
#line 4
this.UPCPrefixAutoVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 3", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant3()
        {
#line 4
this.UPCPrefixAutoVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 4", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant4()
        {
#line 4
this.UPCPrefixAutoVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 5", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant5()
        {
#line 4
this.UPCPrefixAutoVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 6", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant6()
        {
#line 4
this.UPCPrefixAutoVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 7", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant7()
        {
#line 4
this.UPCPrefixAutoVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 8", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant8()
        {
#line 4
this.UPCPrefixAutoVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 9", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant9()
        {
#line 4
this.UPCPrefixAutoVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 10", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant10()
        {
#line 4
this.UPCPrefixAutoVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 11", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant11()
        {
#line 4
this.UPCPrefixAutoVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 12", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant12()
        {
#line 4
this.UPCPrefixAutoVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 13", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant13()
        {
#line 4
this.UPCPrefixAutoVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 14", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant14()
        {
#line 4
this.UPCPrefixAutoVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 15", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant15()
        {
#line 4
this.UPCPrefixAutoVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 16", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant16()
        {
#line 4
this.UPCPrefixAutoVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 17", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant17()
        {
#line 4
this.UPCPrefixAutoVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 18", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant18()
        {
#line 4
this.UPCPrefixAutoVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC prefix auto vending, Examples 1, Variant 19", SourceLine=34)]
        public virtual void UPCPrefixAutoVending_ExampleSet1_Variant19()
        {
#line 4
this.UPCPrefixAutoVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void EANPrefixAutoVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EAN prefix auto vending", null, exampleTags);
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I click on EAN PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I click on the NEXT AVAILABLE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.And("I check that vended identifier matches last name in Name table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I check that category is SPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And(string.Format("If {0} = Existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And(string.Format("If {0} = New, I check that displayed GLN does match ENTITY_GLN in Demog_All_W tab" +
                        "le", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I check that identifier type is EAN Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, 10", new string[] {
                "debug",
                "light"}, SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet0_10()
        {
#line 61
this.EANPrefixAutoVending("10", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, 1000", new string[] {
                "debug",
                "light"}, SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet0_1000()
        {
#line 61
this.EANPrefixAutoVending("1000", "NM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 0", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant0()
        {
#line 61
this.EANPrefixAutoVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 1", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant1()
        {
#line 61
this.EANPrefixAutoVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 2", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant2()
        {
#line 61
this.EANPrefixAutoVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 3", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant3()
        {
#line 61
this.EANPrefixAutoVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 4", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant4()
        {
#line 61
this.EANPrefixAutoVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 5", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant5()
        {
#line 61
this.EANPrefixAutoVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 6", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant6()
        {
#line 61
this.EANPrefixAutoVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 7", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant7()
        {
#line 61
this.EANPrefixAutoVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 8", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant8()
        {
#line 61
this.EANPrefixAutoVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 9", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant9()
        {
#line 61
this.EANPrefixAutoVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 10", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant10()
        {
#line 61
this.EANPrefixAutoVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 11", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant11()
        {
#line 61
this.EANPrefixAutoVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 12", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant12()
        {
#line 61
this.EANPrefixAutoVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 13", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant13()
        {
#line 61
this.EANPrefixAutoVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 14", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant14()
        {
#line 61
this.EANPrefixAutoVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 15", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant15()
        {
#line 61
this.EANPrefixAutoVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 16", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant16()
        {
#line 61
this.EANPrefixAutoVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 17", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant17()
        {
#line 61
this.EANPrefixAutoVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 18", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant18()
        {
#line 61
this.EANPrefixAutoVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN prefix auto vending, Examples 1, Variant 19", SourceLine=89)]
        public virtual void EANPrefixAutoVending_ExampleSet1_Variant19()
        {
#line 61
this.EANPrefixAutoVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EDI COMM ID prefix auto vending", new string[] {
                "debug"}, SourceLine=117)]
        public virtual void EDICOMMIDPrefixAutoVending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EDI COMM ID prefix auto vending", null, new string[] {
                        "debug"});
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 119
 testRunner.Given("I have a CM account with an active prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I click on EDI COMM ID button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.Then("I check that vended identifier matches major key in Name table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
 testRunner.And("I check that member type is #UCS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I check that identifier type is EDI Comm ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void UPCSpecificPrefixVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UPC specific prefix vending", null, exampleTags);
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I click on the STANDARD UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I click on the SPECIFIC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I select UPC prefix from CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I input selected prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I verify Prefix Available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
 testRunner.And("I check that vended identifier matches major key in Name table with leading 0 rem" +
                    "oved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("I check that category is CAP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And(string.Format("If {0} = Existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And(string.Format("If {0} = New, I check that displayed GLN does match ENTITY_GLN in Demog_All_W tab" +
                        "le", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I check that identifier type is UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("I check that UPC Range is Standard UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, 100", new string[] {
                "debug",
                "light"}, SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet0_100()
        {
#line 137
this.UPCSpecificPrefixVending("100", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, 1000", new string[] {
                "debug",
                "light"}, SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet0_1000()
        {
#line 137
this.UPCSpecificPrefixVending("1000", "HCM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 0", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant0()
        {
#line 137
this.UPCSpecificPrefixVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 1", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant1()
        {
#line 137
this.UPCSpecificPrefixVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 2", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant2()
        {
#line 137
this.UPCSpecificPrefixVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 3", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant3()
        {
#line 137
this.UPCSpecificPrefixVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 4", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant4()
        {
#line 137
this.UPCSpecificPrefixVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 5", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant5()
        {
#line 137
this.UPCSpecificPrefixVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 6", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant6()
        {
#line 137
this.UPCSpecificPrefixVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 7", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant7()
        {
#line 137
this.UPCSpecificPrefixVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 8", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant8()
        {
#line 137
this.UPCSpecificPrefixVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 9", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant9()
        {
#line 137
this.UPCSpecificPrefixVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 10", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant10()
        {
#line 137
this.UPCSpecificPrefixVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 11", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant11()
        {
#line 137
this.UPCSpecificPrefixVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 12", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant12()
        {
#line 137
this.UPCSpecificPrefixVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 13", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant13()
        {
#line 137
this.UPCSpecificPrefixVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 14", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant14()
        {
#line 137
this.UPCSpecificPrefixVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 15", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant15()
        {
#line 137
this.UPCSpecificPrefixVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 16", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant16()
        {
#line 137
this.UPCSpecificPrefixVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 17", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant17()
        {
#line 137
this.UPCSpecificPrefixVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 18", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant18()
        {
#line 137
this.UPCSpecificPrefixVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UPC specific prefix vending, Examples 1, Variant 19", SourceLine=170)]
        public virtual void UPCSpecificPrefixVending_ExampleSet1_Variant19()
        {
#line 137
this.UPCSpecificPrefixVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void EANSpecificPrefixVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EAN specific prefix vending", null, exampleTags);
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
 testRunner.And("I click on the EAN PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.And("I click on the SPECIFIC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("I select EAN prefix from CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("I input selected prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I verify Prefix Available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
 testRunner.And("I check that vended identifier matches last name in Name table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I check that category is SPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And(string.Format("If {0} = existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And(string.Format("If {0} = New, I check that displayed GLN does match ENTITY_GLN in Demog_All_W tab" +
                        "le", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And("I check that identifier type is EAN Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 0", new string[] {
                "debug",
                "light"}, SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet0_Variant0()
        {
#line 198
this.EANSpecificPrefixVending("1000", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 1", new string[] {
                "debug",
                "light"}, SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet0_Variant1()
        {
#line 198
this.EANSpecificPrefixVending("1000", "NM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 0", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant0()
        {
#line 198
this.EANSpecificPrefixVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 1", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant1()
        {
#line 198
this.EANSpecificPrefixVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 2", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant2()
        {
#line 198
this.EANSpecificPrefixVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 3", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant3()
        {
#line 198
this.EANSpecificPrefixVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 4", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant4()
        {
#line 198
this.EANSpecificPrefixVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 5", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant5()
        {
#line 198
this.EANSpecificPrefixVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 6", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant6()
        {
#line 198
this.EANSpecificPrefixVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 7", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant7()
        {
#line 198
this.EANSpecificPrefixVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 8", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant8()
        {
#line 198
this.EANSpecificPrefixVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 9", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant9()
        {
#line 198
this.EANSpecificPrefixVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 10", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant10()
        {
#line 198
this.EANSpecificPrefixVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 11", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant11()
        {
#line 198
this.EANSpecificPrefixVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 12", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant12()
        {
#line 198
this.EANSpecificPrefixVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 13", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant13()
        {
#line 198
this.EANSpecificPrefixVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 14", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant14()
        {
#line 198
this.EANSpecificPrefixVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 15", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant15()
        {
#line 198
this.EANSpecificPrefixVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 16", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant16()
        {
#line 198
this.EANSpecificPrefixVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 17", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant17()
        {
#line 198
this.EANSpecificPrefixVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 18", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant18()
        {
#line 198
this.EANSpecificPrefixVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EAN specific prefix vending, Examples 1, Variant 19", SourceLine=229)]
        public virtual void EANSpecificPrefixVending_ExampleSet1_Variant19()
        {
#line 198
this.EANSpecificPrefixVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        public virtual void NDCPrefixVending(string member_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("NDC prefix vending", null, exampleTags);
#line 257
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 258
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 259
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And("I click on the NDC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
 testRunner.And("I select labeler code from LabelerCode table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("I enter the labeler code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I click VALIDATE CODE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I check the company name matches with LabelerCode table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 275
 testRunner.And("I check that vended identifier matches major key in Name table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 276
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("I check that category is CAP", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I check that identifier type is UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I check that UPC Range is NDC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC prefix vending, Examples 1, XCM", new string[] {
                "debug",
                "light"}, SourceLine=285)]
        public virtual void NDCPrefixVending_ExampleSet0_XCM()
        {
#line 257
this.NDCPrefixVending("XCM", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC prefix vending, Examples 1, CM", SourceLine=285)]
        public virtual void NDCPrefixVending_ExampleSet1_CM()
        {
#line 257
this.NDCPrefixVending("CM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC prefix vending, Examples 1, XCM", SourceLine=285)]
        public virtual void NDCPrefixVending_ExampleSet1_XCM()
        {
#line 257
this.NDCPrefixVending("XCM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC prefix vending, Examples 1, HCM", SourceLine=285)]
        public virtual void NDCPrefixVending_ExampleSet1_HCM()
        {
#line 257
this.NDCPrefixVending("HCM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC prefix vending, Examples 1, NM", SourceLine=285)]
        public virtual void NDCPrefixVending_ExampleSet1_NM()
        {
#line 257
this.NDCPrefixVending("NM", ((string[])(null)));
#line hidden
        }
        
        public virtual void NDCPrefixVendingWithInvalidLabelerCode(string member_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("NDC Prefix vending with invalid labeler code", null, exampleTags);
#line 296
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 297
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 298
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.And("I click on the NDC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
 testRunner.And("I enter invalid labeler code: 1111", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
 testRunner.And("I click VALIDATE CODE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.Then("I check that labeler code validation error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC Prefix vending with invalid labeler code, Examples 1, CM", new string[] {
                "debug",
                "light"}, SourceLine=312)]
        public virtual void NDCPrefixVendingWithInvalidLabelerCode_ExampleSet0_CM()
        {
#line 296
this.NDCPrefixVendingWithInvalidLabelerCode("CM", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC Prefix vending with invalid labeler code, Examples 2, CM", SourceLine=316)]
        public virtual void NDCPrefixVendingWithInvalidLabelerCode_ExampleSet1_CM()
        {
#line 296
this.NDCPrefixVendingWithInvalidLabelerCode("CM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC Prefix vending with invalid labeler code, Examples 1, XCM", SourceLine=312)]
        public virtual void NDCPrefixVendingWithInvalidLabelerCode_ExampleSet1_XCM()
        {
#line 296
this.NDCPrefixVendingWithInvalidLabelerCode("XCM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC Prefix vending with invalid labeler code, Examples 1, HCM", SourceLine=312)]
        public virtual void NDCPrefixVendingWithInvalidLabelerCode_ExampleSet1_HCM()
        {
#line 296
this.NDCPrefixVendingWithInvalidLabelerCode("HCM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("NDC Prefix vending with invalid labeler code, Examples 1, NM", SourceLine=312)]
        public virtual void NDCPrefixVendingWithInvalidLabelerCode_ExampleSet1_NM()
        {
#line 296
this.NDCPrefixVendingWithInvalidLabelerCode("NM", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Account Number validation", new string[] {
                "debug",
                "light"}, SourceLine=323)]
        public virtual void AccountNumberValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Account Number validation", null, new string[] {
                        "debug",
                        "light"});
#line 324
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 325
 testRunner.Given("I have an invalid account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 326
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 327
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
 testRunner.And("I enter the invalid account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.Then("I see account number validation error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Short account number validation", new string[] {
                "debug",
                "light"}, SourceLine=335)]
        public virtual void ShortAccountNumberValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Short account number validation", null, new string[] {
                        "debug",
                        "light"});
#line 336
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 337
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 340
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
 testRunner.And("I enter a short account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.Then("I observe that validate button is disable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AlliancePrefixAutoVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alliance prefix auto vending", null, exampleTags);
#line 345
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 346
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.And("I click on the ALLIANCE PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
 testRunner.And("I click on the NEXT AVAILABLE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 361
 testRunner.And("I check that vended identifier matches major key in Name table with leading 0 rem" +
                    "oved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
 testRunner.And("I check that category is MO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 364
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 365
 testRunner.And(string.Format("If {0} = Existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.And(string.Format("If {0} = New, I check that entity GLN is not created in Demog_All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
 testRunner.And("I check that identifier type is UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
 testRunner.And("I check that UPC Range is Alliance Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 0", new string[] {
                "debug",
                "light"}, SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet0_Variant0()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 1", new string[] {
                "debug",
                "light"}, SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet0_Variant1()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "NM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 2", new string[] {
                "debug",
                "light"}, SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet0_Variant2()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "AO", "N/A", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 0", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant0()
        {
#line 345
this.AlliancePrefixAutoVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 1", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant1()
        {
#line 345
this.AlliancePrefixAutoVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 2", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant2()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 3", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant3()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 4", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant4()
        {
#line 345
this.AlliancePrefixAutoVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 5", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant5()
        {
#line 345
this.AlliancePrefixAutoVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 6", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant6()
        {
#line 345
this.AlliancePrefixAutoVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 7", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant7()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 8", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant8()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 9", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant9()
        {
#line 345
this.AlliancePrefixAutoVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 10", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant10()
        {
#line 345
this.AlliancePrefixAutoVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 11", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant11()
        {
#line 345
this.AlliancePrefixAutoVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 12", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant12()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 13", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant13()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 14", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant14()
        {
#line 345
this.AlliancePrefixAutoVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 15", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant15()
        {
#line 345
this.AlliancePrefixAutoVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 16", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant16()
        {
#line 345
this.AlliancePrefixAutoVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 17", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant17()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 18", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant18()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 19", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant19()
        {
#line 345
this.AlliancePrefixAutoVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 20", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant20()
        {
#line 345
this.AlliancePrefixAutoVending("10", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 21", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant21()
        {
#line 345
this.AlliancePrefixAutoVending("100", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 22", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant22()
        {
#line 345
this.AlliancePrefixAutoVending("1000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 23", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant23()
        {
#line 345
this.AlliancePrefixAutoVending("10000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance prefix auto vending, Examples 1, Variant 24", SourceLine=374)]
        public virtual void AlliancePrefixAutoVending_ExampleSet1_Variant24()
        {
#line 345
this.AlliancePrefixAutoVending("100000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void AllianceSpecificPrefixVending(string capacity, string member_Type, string @case, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alliance specific prefix vending", null, exampleTags);
#line 407
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 408
 testRunner.Given(string.Format("I have an account information such that member type is {0}", member_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 409
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 410
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.And("I click on the ALLIANCE PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
 testRunner.And("I click on the SPECIFIC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
 testRunner.And("I select UPC prefix from CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
 testRunner.And("I input selected prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
 testRunner.And("I verify Prefix Available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
 testRunner.And("I click on the NEXT button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.And("I click on VEND IDENTIFIER button on Review page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
 testRunner.And("I wait for sync to be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
 testRunner.Then("I check this prefix in CompanyPrefix table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 426
 testRunner.And("I check that vended identifier matches major key in Name table with leading 0 rem" +
                    "oved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
 testRunner.And("I check that member type is #UPC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("I check that category is MO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.And("I see a new entity GLN displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
 testRunner.And(string.Format("If {0} = Existing, I check that displayed GLN does not match ENTITY_GLN in Demog_" +
                        "All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.And(string.Format("If {0} = New, I check that entity GLN is not created in Demog_All_W table", @case), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
 testRunner.And("I check that account information is correct", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
 testRunner.And("I check that identifier type is UPC Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
 testRunner.And(string.Format("I check that capacity is {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
 testRunner.And("I check that UPC Range is Alliance Prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, 10", new string[] {
                "debug",
                "light"}, SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet0_10()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "CM", "Existing", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, 100000", new string[] {
                "debug",
                "light"}, SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet0_100000()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "HCM", "New", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, 100", new string[] {
                "debug",
                "light"}, SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet0_100()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "AO", "N/A", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 0", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant0()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 1", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant1()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 2", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant2()
        {
#line 407
this.AllianceSpecificPrefixVending("1000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 3", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant3()
        {
#line 407
this.AllianceSpecificPrefixVending("10000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 4", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant4()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "CM", "Existing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 5", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant5()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 6", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant6()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 7", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant7()
        {
#line 407
this.AllianceSpecificPrefixVending("1000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 8", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant8()
        {
#line 407
this.AllianceSpecificPrefixVending("10000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 9", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant9()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "NM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 10", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant10()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 11", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant11()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 12", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant12()
        {
#line 407
this.AllianceSpecificPrefixVending("1000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 13", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant13()
        {
#line 407
this.AllianceSpecificPrefixVending("10000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 14", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant14()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "XCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 15", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant15()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 16", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant16()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 17", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant17()
        {
#line 407
this.AllianceSpecificPrefixVending("1000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 18", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant18()
        {
#line 407
this.AllianceSpecificPrefixVending("10000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 19", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant19()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "HCM", "New", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 20", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant20()
        {
#line 407
this.AllianceSpecificPrefixVending("10", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 21", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant21()
        {
#line 407
this.AllianceSpecificPrefixVending("100", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 22", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant22()
        {
#line 407
this.AllianceSpecificPrefixVending("1000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 23", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant23()
        {
#line 407
this.AllianceSpecificPrefixVending("10000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alliance specific prefix vending, Examples 1, Variant 24", SourceLine=439)]
        public virtual void AllianceSpecificPrefixVending_ExampleSet1_Variant24()
        {
#line 407
this.AllianceSpecificPrefixVending("100000", "AO", "N/A", ((string[])(null)));
#line hidden
        }
        
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate(string capacity, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vend prefix for the capacity which not match to the range predicate", null, exampleTags);
#line 474
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 475
 testRunner.Given("I have an account information such that member type is CM, XCM, HCM, NM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 476
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 477
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.And("I select Vend or Hold an Identifier menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 479
 testRunner.And("I select Vend an Identifier button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
 testRunner.And("I input account number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 481
 testRunner.And("I click on validate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
 testRunner.And("I observe validation passes with green check mark", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
 testRunner.And("I click on the UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.And("I click on the STANDARD UPC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 485
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
 testRunner.And("I click on the SPECIFIC PREFIX button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 487
 testRunner.And(string.Format("I select a UPC prefix from range for different capacity than {0}", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 488
 testRunner.And("I input selected prefix", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 489
 testRunner.Then("I see message for PREFIX NOT AVAILABLE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 1, " +
            "10", new string[] {
                "debug",
                "light"}, SourceLine=493)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet0_10()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("10", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 2, " +
            "10", SourceLine=497)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet1_10()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("10", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 1, " +
            "100", SourceLine=493)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet1_100()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("100", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 1, " +
            "1000", SourceLine=493)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet1_1000()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("1000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 1, " +
            "10000", SourceLine=493)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet1_10000()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("10000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Vend prefix for the capacity which not match to the range predicate, Examples 1, " +
            "100000", SourceLine=493)]
        public virtual void VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate_ExampleSet1_100000()
        {
#line 474
this.VendPrefixForTheCapacityWhichNotMatchToTheRangePredicate("100000", ((string[])(null)));
#line hidden
        }
        
        public virtual void OpenRangeThatIsAlreadyOpen(string capacity, string prefix_Type, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open Range that is already open", null, exampleTags);
#line 505
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 506
 testRunner.Given(string.Format("I have a {0} range which is already open", prefix_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 507
 testRunner.When("I navigate to UIIS UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 508
 testRunner.And("I log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("I select Open a Prefix Range menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.And(string.Format("I click a RANGE button for {0}", prefix_Type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.And(string.Format("I select {0} capacity radio button", capacity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
 testRunner.And("I input the specific range", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 513
 testRunner.And("I input the reason for opening the range", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
 testRunner.And("I click on Next button in Open Prefix Range page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
 testRunner.And("click on the OPEN RANGE button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 516
 testRunner.Then("I see error on open range review page: Range cannot be opened as it is already op" +
                    "en.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, 10", new string[] {
                "debug",
                "light"}, SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet0_10()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("10", "EAN", new string[] {
                        "debug",
                        "light"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 0", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant0()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("10", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 1", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant1()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("100", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 2", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant2()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("1000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 3", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant3()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("10000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 4", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant4()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("100000", "UPC", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 5", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant5()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("10", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 6", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant6()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("100", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 7", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant7()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("1000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 8", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant8()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("10000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open Range that is already open, Examples 1, Variant 9", SourceLine=520)]
        public virtual void OpenRangeThatIsAlreadyOpen_ExampleSet1_Variant9()
        {
#line 505
this.OpenRangeThatIsAlreadyOpen("100000", "EAN", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
